@model PSoC.ManagementService.Models.CustomerAdminViewModel

@using (Html.BeginForm("AddEditCustomer", "Admin", null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnvironmentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EnvironmentId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EnvironmentId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OAuthURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.OAuthURL, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OAuthURL)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OAuthApplicationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.OAuthApplicationId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OAuthApplicationId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OAuthClientId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.OAuthClientId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OAuthClientId)
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.AssociatedEnvironmentIds, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <label class="control-label col-md-2">(Comma-Seperated)</label>
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AssociatedEnvironmentIds, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AssociatedEnvironmentIds)
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.AssociatedEnvironmentIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <label class="col-md-10">(Comma-Seperated)</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.AssociatedEnvironmentIds, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssociatedEnvironmentIds)
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.DownloadLicenseTimeout, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DownloadLicenseTimeout, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DownloadLicenseTimeout)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxDownloadsPerClass, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MaxDownloadsPerClass, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaxDownloadsPerClass)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxDownloadsPerCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MaxDownloadsPerCustomer, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaxDownloadsPerCustomer)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AuthenticationProviders, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AuthenticationProviders, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AuthenticationProviders)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>