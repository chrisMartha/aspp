@model PSoC.ManagementService.Services.Models.Admin
@{
    ViewBag.Title = "Create";
}
<div id="div_id_info">
    <div class="info_titlesection">
        <!-- title -->
        <div class="info_title">Create New Admin</div>
        <a style="color:inherit" href="@Url.Action("Index", "Admins")">
            <div class="info_backtolist">back to list</div>
        </a>
    </div>
    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
    @*<h2>Create</h2>*@


    <!-- Iput details form -->
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @*<div class="form-horizontal">*@
        <div id="form_id_newAdmin">
            @*<h4>Admin</h4>
                <h2><a href="@Url.Action("Index", "Admin")">< home</a></h2>
                <hr />*@
            @if (ViewData.ModelState.Any(x => string.IsNullOrEmpty(x.Key)))
            {
                <div class="div_input">
                    <div class="alert alert-danger" role="alert">
                        <span class="sr-only">Error:</span>
                        @Html.ValidationSummary(true)
                    </div>
                </div>

            }
            <div class="div_input">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "formlabel" })

                @Html.TextBoxFor(model => model.UserId, new { @class = "txt", @maxlength = 50 })
            </div>
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })

            <div class="div_input">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "formlabel" })

                @Html.TextBoxFor(model => model.Username, new { @class = "txt", @maxlength = 50 })
            </div>

            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })


            <div class="div_input" id="radios">
                @Html.LabelFor(model => model.AdminType, htmlAttributes: new { @class = "formlabel1" })

                <div class="txt">
                    @{string globalId = ViewData.TemplateInfo.GetFullHtmlFieldId("radioGlobal");}
                    @if (Model == null || Model.AdminType == PSoC.ManagementService.Core.AdminType.GlobalAdmin)
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.GlobalAdmin, new { @id = globalId, @checked = "checked" });
                    }
                    else
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.GlobalAdmin, new { @id = globalId });
                    }
                    @Html.LabelFor(x => x.AdminType, "Global Admin", new { @for = globalId, @class = "formlabel" })

                </div>

                @Html.ValidationMessageFor(x => x.AdminType, "", new { @class = "text-danger" })
                <br />
                <div class="txt">
                    @{string districtId = ViewData.TemplateInfo.GetFullHtmlFieldId("radioDistrict");}
                    @if (Model != null && Model.AdminType == PSoC.ManagementService.Core.AdminType.DistrictAdmin)
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.DistrictAdmin, new { @id = districtId, @checked = "checked" });
                        @Html.LabelFor(x => x.AdminType, "District Admin", new { @for = districtId, @class = "formlabel" })

                        <div class="rbtnDropdown">
                            @Html.DropDownListFor(x => x.DistrictId, PSoC.ManagementService.Helper.Admins.AvailableDistricts, new { @placeholder = "select district" })

                        </div>
                    }
                    else
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.DistrictAdmin, new { @id = districtId });
                        @Html.LabelFor(x => x.AdminType, "District Admin", new { @for = districtId, @class = "formlabel" })
                        <div class="rbtnDropdown">
                            @Html.DropDownListFor(x => x.DistrictId, PSoC.ManagementService.Helper.Admins.AvailableDistricts, new { @disabled = true, @placeholder = "select district" })
                            @*@Html.DropDownListFor(x => x.DistrictId, PSoC.ManagementService.Helper.Admins.AvailableDistricts, new { @disabled = true, @placeholder = "select district" })*@
                            @*@Html.ValidationMessageFor(x => x.DistrictId, "", new { @class = "text-danger" })*@
                        </div>

                    }
                </div>
                <br />
                @Html.ValidationMessageFor(x => x.DistrictId, "", new { @class = "text-danger" })
                <br />
                <br />
                <div class="txt">
                    @{string schoolId = ViewData.TemplateInfo.GetFullHtmlFieldId("radioSchool");}
                    @if (Model != null && Model.AdminType == PSoC.ManagementService.Core.AdminType.SchoolAdmin)
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.SchoolAdmin, new { @id = schoolId, @checked = "checked" });
                        @Html.LabelFor(x => x.AdminType, "School Admin", new { @for = schoolId, @class = "formlabel" })
                        <div class="rbtnDropdown">
                            @Html.DropDownListFor(x => x.SchoolId, PSoC.ManagementService.Helper.Admins.AvailableSchools, new { @placeholder = "select school" })
                            @Html.ValidationMessageFor(x => x.SchoolId, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        @Html.RadioButtonFor(x => x.AdminType, (int)PSoC.ManagementService.Core.AdminType.SchoolAdmin, new { @id = schoolId });
                        @Html.LabelFor(x => x.AdminType, "School Admin", new { @for = schoolId, @class = "formlabel" })
                        <div class="rbtnDropdown">
                            @*@Html.DropDownListFor(x => x.SchoolId, PSoC.ManagementService.Helper.Admins.AvailableSchools, new { @disabled = true, @class = "control-select selectSchool", @placeholder = "select school" })*@
                            @Html.DropDownListFor(x => x.SchoolId, PSoC.ManagementService.Helper.Admins.AvailableSchools, new { @disabled = true, @placeholder = "select school" })
                            @Html.ValidationMessageFor(x => x.SchoolId, "", new { @class = "text-danger" })
                        </div>
                    }
                </div>
            </div>
            <div class="div_input"></div>
            <div class="div_input">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "formlabel" })
                <div class="checkbox1">
                    @if (Model == null)
                    {
                        @Html.CheckBoxFor(model => model.Active, new { @checked = "checked", @class = "activeToggle", @data_toggle = "toggle", @data_on = "YES", @data_off = "NO", @data_onstyle = "success", @data_offstyle = "danger", @data_style = "ios" })
                    }
                    else
                    {
                        @Html.CheckBoxFor(model => model.Active);
                    }
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="div_input">
                @Html.LabelFor(model => model.AdminEmail, htmlAttributes: new { @class = "formlabel" })

                @Html.TextBoxFor(model => model.AdminEmail, htmlAttributes: new { @class = "txt", @maxlength = 50 })
            </div>
            @Html.ValidationMessageFor(model => model.AdminEmail, "", new { @class = "text-danger" })


            <div class="div_input">
                <div class="col-md-offset-3 col-md-10">
                    <a href="@Url.Action("Index", "Admin")" class="cancel">cancel</a>
                    <input type="submit" value="Create Admin" class="btn btn-default" />
                </div>
            </div>
            <div class="div_input"></div>
        </div>


    }

</div>  <!-- Iput details form end-->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/adminform.js")
    @Scripts.Render("~/scripts/bootstrap-toggle.js")
}
@section styles {
    @Styles.Render("~/Content/bootstrap-toggle.css")
}
